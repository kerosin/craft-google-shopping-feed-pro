{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * @author    kerosin
 * @copyright Copyright (c) 2021 kerosin
 * @link      https://github.com/kerosin
 * @package   GoogleShoppingFeedPro
 * @since     1.1.0
 */
#}

{% import 'google-shopping-feed-pro/_macros/xml' as xml %}

{% set variables = craft.googleShoppingFeedPro %}
{% set currencyIso = variables.elementCurrencyIso(element, settings.currencyField, settings.currencyCustomValue) %}

<item>

    {# id #}
    {{ xml.element({
        tag: 'id',
        element: element,
        field: settings.idField
    }) }}

    {# title #}
    {{ xml.element({
        tag: 'title',
        element: element,
        field: settings.titleField
    }) }}

    {# description #}
    {{ xml.element({
        tag: 'description',
        element: element,
        field: settings.descriptionField
    }) }}

    {# link #}
    {{ xml.element({
        tag: 'link',
        value: variables.elementUrl(element)
    }) }}

    {# image_link #}
    {{ xml.element({
        tag: 'image_link',
        element: element,
        field: settings.imageLinkField
    }) }}

    {# additional_image_link #}
    {{ xml.element({
        tag: 'additional_image_link',
        element: element,
        field: settings.additionalImageLinkField,
        multiple: true
    }) }}

    {# availability #}
    {{ xml.element({
        tag: 'availability',
        value: variables.elementAvailabilityFieldValue(element)
    }) }}

    {# availability_date #}
    {{ xml.element({
        tag: 'availability_date',
        element: element,
        field: settings.availabilityDateField
    }) }}

    {# cost_of_goods_sold #}
    {{ xml.element({
        tag: 'cost_of_goods_sold',
        element: element,
        field: settings.costOfGoodsSoldField,
        suffix: currencyIso,
        number: true,
        format: true
    }) }}

    {# expiration_date #}
    {{ xml.element({
        tag: 'expiration_date',
        element: element,
        field: settings.expirationDateField
    }) }}

    {# price #}
    {{ xml.element({
        tag: 'price',
        element: element,
        field: settings.priceField,
        suffix: currencyIso,
        number: true,
        format: true
    }) }}

    {# sale_price #}
    {% if settings.priceField is not empty and settings.salePriceField is not empty %}
        {% set price = variables.elementFieldValue(element, settings.priceField) %}
        {% set salePrice = variables.elementFieldValue(element, settings.salePriceField) %}

        {% if price is not empty and salePrice is not empty and salePrice < price %}
            {{ xml.element({
                tag: 'sale_price',
                element: element,
                field: settings.salePriceField,
                suffix: currencyIso,
                number: true,
                format: true
            }) }}

            {# sale_price_effective_date #}
            {% if
                settings.salePriceEffectiveDateFromField is not empty and
                settings.salePriceEffectiveDateToField is not empty
            %}
                {% set dateFrom = variables.elementSaleStartDate(element, settings.salePriceEffectiveDateFromField) %}
                {% set dateTo = variables.elementSaleEndDate(element, settings.salePriceEffectiveDateToField) %}

                {{ xml.element({
                    tag: 'sale_price_effective_date',
                    value: [dateFrom, dateTo],
                    separator: '/'
                }) }}
            {% endif %}
        {% endif %}
    {% endif %}

    {# unit_pricing_measure #}
    {{ xml.element({
        tag: 'unit_pricing_measure',
        element: element,
        field: settings.unitPricingMeasureField,
        suffix: variables.elementFieldValue(
            element,
            settings.unitPricingMeasureUnitField,
            settings.unitPricingMeasureUnitCustomValue
        ),
        suffixSeparator: '',
        number: true
    }) }}

    {# unit_pricing_base_measure #}
    {{ xml.element({
        tag: 'unit_pricing_base_measure',
        element: element,
        field: settings.unitPricingBaseMeasureField,
        suffix: variables.elementFieldValue(
            element,
            settings.unitPricingBaseMeasureUnitField,
            settings.unitPricingBaseMeasureUnitCustomValue
        ),
        suffixSeparator: '',
        number: true
    }) }}

    {# installment #}
    {{ xml.element({
        tag: 'installment',
        element: element,
        field: settings.installmentField
    }) }}

    {# subscription_cost #}
    {{ xml.element({
        tag: 'subscription_cost',
        element: element,
        field: settings.subscriptionCostField
    }) }}

    {# loyalty_points #}
    {{ xml.element({
        tag: 'loyalty_points',
        element: element,
        field: settings.loyaltyPointsField
    }) }}

    {# google_product_category #}
    {{ xml.element({
        tag: 'google_product_category',
        element: element,
        field: settings.googleProductCategoryField,
        customValue: settings.googleProductCategoryCustomValue
    }) }}

    {# product_type #}
    {{ xml.element({
        tag: 'product_type',
        element: element,
        field: settings.productTypeField,
        separator: ' > '
    }) }}

    {# brand #}
    {{ xml.element({
        tag: 'brand',
        element: element,
        field: settings.brandField,
        customValue: settings.brandCustomValue
    }) }}

    {# gtin #}
    {{ xml.element({
        tag: 'gtin',
        element: element,
        field: settings.gtinField
    }) }}

    {# mpn #}
    {{ xml.element({
        tag: 'mpn',
        element: element,
        field: settings.mpnField
    }) }}

    {# identifier_exists #}
    {{ xml.element({
        tag: 'identifier_exists',
        element: element,
        field: settings.identifierExistsField
    }) }}

    {# condition #}
    {{ xml.element({
        tag: 'condition',
        element: element,
        field: settings.conditionField,
        customValue: settings.conditionCustomValue
    }) }}

    {# adult #}
    {{ xml.element({
        tag: 'adult',
        element: element,
        field: settings.adultField,
        customValue: settings.adultCustomValue
    }) }}

    {# multipack #}
    {{ xml.element({
        tag: 'multipack',
        element: element,
        field: settings.multipackField
    }) }}

    {# is_bundle #}
    {{ xml.element({
        tag: 'is_bundle',
        element: element,
        field: settings.isBundleField
    }) }}

    {# energy_efficiency_class #}
    {{ xml.element({
        tag: 'energy_efficiency_class',
        element: element,
        field: settings.energyEfficiencyClassField,
        customValue: settings.energyEfficiencyClassCustomValue
    }) }}

    {# min_energe_efficiency_class #}
    {{ xml.element({
        tag: 'min_energy_efficiency_class',
        element: element,
        field: settings.minEnergyEfficiencyClassField,
        customValue: settings.minEnergyEfficiencyClassCustomValue
    }) }}

    {# max_energy_efficiency_class #}
    {{ xml.element({
        tag: 'max_energy_efficiency_class',
        element: element,
        field: settings.maxEnergyEfficiencyClassField,
        customValue: settings.maxEnergyEfficiencyClassCustomValue
    }) }}

    {# age_group #}
    {{ xml.element({
        tag: 'age_group',
        element: element,
        field: settings.ageGroupField,
        customValue: settings.ageGroupCustomValue
    }) }}

    {# color #}
    {{ xml.element({
        tag: 'color',
        element: element,
        field: settings.colorField,
        customValue: settings.colorCustomValue
    }) }}

    {# gender #}
    {{ xml.element({
        tag: 'gender',
        element: element,
        field: settings.genderField,
        customValue: settings.genderCustomValue
    }) }}

    {# material #}
    {{ xml.element({
        tag: 'material',
        element: element,
        field: settings.materialField,
        customValue: settings.materialCustomValue
    }) }}

    {# pattern #}
    {{ xml.element({
        tag: 'pattern',
        element: element,
        field: settings.patternField,
        customValue: settings.patternCustomValue
    }) }}

    {# size #}
    {{ xml.element({
        tag: 'size',
        element: element,
        field: settings.sizeField,
        customValue: settings.sizeCustomValue
    }) }}

    {# size_type #}
    {{ xml.element({
        tag: 'size_type',
        element: element,
        field: settings.sizeTypeField,
        customValue: settings.sizeTypeCustomValue
    }) }}

    {# size_system #}
    {{ xml.element({
        tag: 'size_system',
        element: element,
        field: settings.sizeSystemField,
        customValue: settings.sizeSystemCustomValue
    }) }}

    {# item_group_id #}
    {{ xml.element({
        tag: 'item_group_id',
        value: variables.elementItemGroupIdFieldValue(element)
    }) }}

    {# product_length #}
    {{ xml.element({
        tag: 'product_length',
        element: element,
        field: settings.productLengthField,
        suffix: variables.elementDimensionUnit(
            element,
            settings.productLengthUnitField,
            settings.productLengthUnitCustomValue
        ),
        number: true
    }) }}

    {# product_width #}
    {{ xml.element({
        tag: 'product_width',
        element: element,
        field: settings.productWidthField,
        suffix: variables.elementDimensionUnit(
            element,
            settings.productWidthUnitField,
            settings.productWidthUnitCustomValue
        ),
        number: true
    }) }}

    {# product_height #}
    {{ xml.element({
        tag: 'product_height',
        element: element,
        field: settings.productHeightField,
        suffix: variables.elementDimensionUnit(
            element,
            settings.productHeightUnitField,
            settings.productHeightUnitCustomValue
        ),
        number: true
    }) }}

    {# product_weight #}
    {{ xml.element({
        tag: 'product_weight',
        element: element,
        field: settings.productWeightField,
        suffix: variables.elementWeightUnit(
            element,
            settings.productWeightUnitField,
            settings.productWeightUnitCustomValue
        ),
        number: true
    }) }}

    {# product_detail #}
    {{ xml.element({
        tag: 'product_detail',
        element: element,
        field: settings.productDetailField
    }) }}

    {# product_highlight #}
    {{ xml.element({
        tag: 'product_highlight',
        element: element,
        field: settings.productHighlightField
    }) }}

    {# Custom Tags #}
    {% if settings.customTags is not empty and settings.customTags|length %}
        {% for customTag in settings.customTags %}
            {% set customTagName = customTag.name|trim %}
            {% if customTagName is not empty and customTag.field is not empty %}
                {{ xml.element({
                    tag: customTagName,
                    element: element,
                    field: customTag.field,
                    customValue: customTag.customValue
                }) }}
            {% endif %}
        {% endfor %}
    {% endif %}

</item>
